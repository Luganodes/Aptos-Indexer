services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      # - NODE_ENV=production
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    command: npm run start:dev
    # command: npm run start:prod
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    container_name: mongo-aptos-indexer
    restart: unless-stopped
    command: --port ${DB_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
    ports:
        - '${DB_PORT}:${DB_PORT}'
    volumes:
        - mongodb_data:/data/db
    healthcheck:
      test:
          [
              'CMD',
              'mongosh',
              '--port',
              '${DB_PORT}',
              '--eval',
              "db.adminCommand('ping')",
          ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s


volumes:
  mongodb_data:
